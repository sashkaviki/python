# Задача1: Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

my_list = ['Guido', 123, None, False, 3.14]
for i in my_list:
   print(type(i))


# Задание2: Для списка реализовать обмен значений соседних элементов, т.е.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().

count = int(input('Укажите количество элементов: '))
members = []
for i in range(count):
     count_num = input((f'Введите элемент: '))
     members.append(count_num)
     print(members)
for i in range(1, len(members), 2):
    j = members[i-1]
    members[i-1] = members[i]
    members[i] = j
print(members)


# Задача3: Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.

months = int(input('Введите номер месяца: '))
seasons_list = ['Зима', 'Весна', 'Лето', 'Осень']
seasons_dict = {1 : 'Зима', 2 : 'Весна', 3 : 'Лето', 4 : 'Осень'}
if months == 12 or 1 <= months <= 2:
    print(seasons_list[0])
    print(seasons_dict.get(1))
elif 3 <= months <= 5:
    print(seasons_list[1])
    print(seasons_dict.get(2))
elif 6 <= months <= 8:
    print(seasons_list[2])
    print(seasons_dict.get(3))
elif 9 <= months <= 11:
    print(seasons_list[3])
    print(seasons_dict.get(4))
else:
    print('Ввели не верное число!')

#Задача4: Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове

my_str = input('Введите строку: ')
my_word = my_str.split(' ')
for word, el in enumerate(my_word, 1):
    if len(el) > 10:
        el = el[0:10]
    print(word, el)


# Задача5: Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор
# натуральных чисел. У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.

my_list = [1, 2, 7, 5, 3, 3, 2]
# for i in range(len(my_list)):
    number = int(input('Введите число: '))
    my_list.append(number)
    my_list = sorted(my_list)
    print(my_list[::-1])


# Задача6: Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента —
# номер товара и словарь с параметрами (характеристиками товара:
# название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
#     (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#     (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#     (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
# например название, а значение — список значений-характеристик, например список названий товаров.
# Пример:
# {
#     “название”: [“компьютер”, “принтер”, “сканер”],
#     “цена”: [20000, 6000, 2000],
#     “количество”: [5, 2, 7],
#     “ед”: [“шт.”]
# }

goods = int(input('Введите количество товара: '))
n = 1
my_dict = []
my_list = []
my_analys = {}
while goods >= n:
    my_dict = dict({'Название': input('Введите название: '), 'Цена': int(input('Введите цену: ')),
                    'Количество': int(input('Введите количество: ')), 'Ед.': input('Введите единицу измерения: ')})
    my_list.append((n, my_dict))
    n += 1
    my_analys = dict(
        {'Название': my_dict.get('Название'), 'Цена': my_dict.get('Цена'), 'Количество': my_dict.get('Количество'),
        'Ед.': my_dict.get('Ед.')})
print(my_list)
print(my_analys)
